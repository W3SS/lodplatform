package com.ucuenca.pentaho.plugin.step;

import com.hp.hpl.jena.rdf.model.*;
import com.hp.hpl.jena.graph.*;

/** .
 * @author Fabian Pe√±aloza Marin
 * @version 1
 */

public class api{

   protected static final String uri ="http://purl.org/linked-data/api/vocab#";

   /** returns the URI for this schema
       @return the URI for this schema
   */
   public static String getURI()
       { return uri; }

   protected static final Resource resource( String local )
       { return ResourceFactory.createResource( uri + local ); }

   protected static final Property property( String local )
       { return ResourceFactory.createProperty( uri, local ); }

   public static Property li( int i )
       { return property( "_" + i ); }

   public static final Property label = property( "label" );
   public static final Property uriTemplate = property("uriTemplate");
   public static final Property filter = property("filter");
   public static final Property sort = property("sort");
   public static final Property sparqlEndpoint = property("sparqlEndpoint");
   
   public static final Resource ListEndpoint = property( "ListEndpoint" );
  // public static final Resource Selector = property( "Selector" );
   public static final Property selector = property( "selector" );
   public static final Property defaultViewer = property("defaultViewer");
   public static final Property labelledDescribeViewer = property("labelledDescribeViewer");
   
   public static final Property API = property("API");
   public static final Property viewer = property("viewer");
   public static final Property Viewer = property("Viewer");
   public static final Property name = property("name");
   public static final Property properties = property("properties");
   public static final Property variable = property("variable");
   public static final Property value = property("value");
   public static final Property endpoint = property("endpoint");
   public static final Property formatter = property("formatter"); 
   public static final Property mimeType = property ("mimeType");
   public static final Property XsltFormatter = property ("XsltFormatter");
   public static final Property stylesheet = property("stylesheet");
   public static final Property ItemEndpoint = property("ItemEndpoint");
   public static final Property itemTemplate= property("itemTemplate");
   public static final Property type= property("type");
   public static final Property where= property("where");
   public static final Property defaultFormatter = property("defaultFormatter");
   /**
       The same items of vocabulary, but at the Node level, parked inside a
       nested class so that there's a simple way to refer to them.
   */
   @SuppressWarnings("hiding") public static final class Nodes
       {
       public static final Node label= api.label.asNode();
       public static final Node uriTemplate = api.uriTemplate.asNode();
       public static final Node ListEndpoint = api.ListEndpoint.asNode();
       public static final Node selector = api.selector.asNode();
       public static final Node filter = api.filter.asNode();
       public static final Node sort = api.sort.asNode();
       public static final Node defaultViewer = api.defaultViewer.asNode();
       public static final Node labelledDescribeViewer = api.labelledDescribeViewer.asNode();
       public static final Node sparqlEndpoint = api.sparqlEndpoint.asNode();
       public static final Node API = api.API.asNode();
       public static final Node viewer = api.viewer.asNode();
       public static final Node Viewer = api.Viewer.asNode();
       public static final Node name = api.name.asNode();
       public static final Node properties = api.properties.asNode();
       public static final Node variable = api.variable.asNode();
       public static final Node value = api.value.asNode();
       public static final Node endpoint = api.endpoint.asNode();
       public static final Node formatter = api.formatter.asNode();
       public static final Node mimeType = api.mimeType.asNode();
       public static final Node XsltFormatter = api.XsltFormatter.asNode();
       public static final Node stylesheet = api.stylesheet.asNode();
       public static final Node ItemEndpoint = api.ItemEndpoint.asNode();
       public static final Node itemTemplate = api.itemTemplate.asNode();
       public static final Node type = api.type.asNode();
       public static final Node where = api.where.asNode();
       public static final Node defaultFormatter = api.defaultFormatter.asNode();
       
       }

}

