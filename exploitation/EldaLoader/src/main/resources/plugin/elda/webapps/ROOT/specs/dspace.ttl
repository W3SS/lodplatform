#
# A hello-world config. 
#

# Assorted prefix declarations. Some of them are for the structuring
# of the API config, others are for the vocabulary definitions.
#

@prefix api:                <http://purl.org/linked-data/api/vocab#> .

@prefix rdf:                <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:               <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:                <http://www.w3.org/2001/XMLSchema#> .

# The elda namespace/prefix is for Elda extensions to the LDA specification.
@prefix elda:               <http://www.epimorphics.com/vocabularies/lda#> .

# Prefix for example-local entities.
@prefix dspace:				<http://dspace.ucuenca.edu.ec/resource/>.

@prefix bibo:    <http://purl.org/ontology/bibo/> .
@prefix mrel: <http://id.loc.gov/vocabulary/relators/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix rdag1: <http://rdvocab.info/Elements/> .
@prefix dc:	<http://purl.org/dc/elements/1.1/> .
@prefix rdaa:	<http://rdaregistry.info/Elements/a/> .


# ---------------------------------------------------------------------
# API config

dspace:dspace-repository a api:API 
	; rdfs:label "Repositorio Dspace - Universidad de Cuenca"@es
	# Name the SPARQL endpoint which supplies the data we present
	 #; api:sparqlEndpoint <local:data/dspaceDS.ttl>
	 ; api:sparqlEndpoint <http://190.15.141.102:8890/sparql>
	; api:defaultViewer api:labelledDescribeViewer
	; api:viewer [a api:Viewer; api:name "empty"; api:properties ""]
	#; api:variable [api:name "_velocityRoot"; api:value "http://localhost:8080/lda-assets/vm/"]
	; api:variable [api:name "_velocityPath"; api:value "lda-assets/velocity/"]
	; api:variable [api:name "_resourceRoot"; api:value "/lda-assets/"]
	; api:endpoint
		dspace:thesis, dspace:issue, dspace:document, dspace:performance, dspace:book, dspace:article, dspace:community, dspace:collection, dspace:person, dspace:about, dspace:personreg, dspace:communityreg, dspace:collectionreg, dspace:resourcereg, dspace:thesisreg, dspace:documentreg, dspace:bookreg, dspace:issuereg, dspace:performancereg, dspace:articlereg
	#; api:formatter
	#	[a elda:VelocityFormatter
	#	; api:name "vhtml"
	#	; elda:className "com.epimorphics.lda.renderers.VelocityRendererFactory"
	#	; api:mimeType "text/html"
	#	; elda:velocityTemplate "page-shell.vm"
	#	]
	; api:formatter
		[ a api:XsltFormatter 
		; api:name "html" 
		; api:mimeType "text/html; charset=utf-8" 
		; api:stylesheet "lda-assets/xslt/result-osm-trimmed.xsl"
		# ; elda:shortnameMode elda:roundTrip
		]
	#; api:formatter
    #    [a elda:VelocityFormatter
    #    ; api:name "html"
    #    ; elda:className "com.epimorphics.lda.renderers.VelocityRendererFactory"
    #    ; api:mimeType "text/html"
    #    ]
    ; api:formatter
        [a elda:FeedFormatter
        ; api:name "atom"
        ; elda:className "com.epimorphics.lda.renderers.FeedRendererFactory"
        ; api:mimeType "application/atom+xml"
        ; elda:feedTitle "an example Elda feed"
        ]
    ; elda:enableCounting true
   	; elda:cacheExpiryTime "1m"

   	# URL rewrite feature
   	#; elda:rewriteResultURIs
    #[ elda:ifStarts "http://localhost:2020/resource/item/"
    #; elda:replaceStartBy "http://localhost:8080/standalone/dspace/tesis/"
    #]
    ;elda:graphTemplate "http://190.15.141.102:8080/dspace/"
	.
	
<http://localhost:3030/ds/query> 
    elda:textSearchOperand (rdfs:label "?_search" 99)
    .

# Endpoint definitions

dspace:person a api:ListEndpoint 
	; rdfs:label "Personas" 
	; api:uriTemplate "/contribuidores" 
	; api:selector [api:filter "type=Persona"; api:sort "label"]
	; api:defaultViewer api:labelledDescribeViewer
	.

dspace:community a api:ListEndpoint 
	; rdfs:label "Comunidades" 
	; api:uriTemplate "/comunidades" 
	; api:selector 
	[api:filter "type=Comunidad"; api:sort "label"]
	; api:defaultViewer api:labelledDescribeViewer
	.

dspace:collection a api:ListEndpoint 
	; rdfs:label "Colecciones" 
	; api:uriTemplate "/colecciones" 
	; api:variable [api:name "item"; api:type rdfs:Resource]
	; api:selector 
	[ api:where '?item rdf:type bibo:Collection. filter(regex(str(?item),"coleccion"))'
		; api:sort "label"
		]
		#[api:filter "type=Comunidad"; api:sort "label"]
	; api:defaultViewer api:labelledDescribeViewer
	.

dspace:thesis a api:ListEndpoint 
	; rdfs:label "Tesis" 
	; api:uriTemplate "/tesis" 
	; api:selector [api:filter "type=Tesis"; api:sort "label"]
	; api:defaultViewer api:labelledDescribeViewer
	.

dspace:document a api:ListEndpoint 
	; rdfs:label "Documentos" 
	; api:uriTemplate "/documentos" 
	; api:selector [api:filter "type=Documento"; api:sort "label"]
	; api:defaultViewer api:labelledDescribeViewer
	.

dspace:book a api:ListEndpoint 
	; rdfs:label "Libros" 
	; api:uriTemplate "/libros" 
	; api:selector [api:filter "type=Libro"; api:sort "label"]
	; api:defaultViewer api:labelledDescribeViewer
	.

dspace:issue a api:ListEndpoint 
	; rdfs:label "Revistas" 
	; api:uriTemplate "/revistas" 
	; api:selector [api:filter "type=Revista"; api:sort "label"]
	; api:defaultViewer api:labelledDescribeViewer
	.

dspace:performance a api:ListEndpoint 
	; rdfs:label "Eventos" 
	; api:uriTemplate "/eventos" 
	; api:selector [api:filter "type=Evento"; api:sort "label"]
	; api:defaultViewer api:labelledDescribeViewer
	.

dspace:article a api:ListEndpoint 
	; rdfs:label "Art√≠culos" 
	; api:uriTemplate "/articulos" 
	; api:selector [api:filter "type=Articulo"; api:sort "label"]
	; api:defaultViewer api:labelledDescribeViewer
	.

#
# Specific entity: deferenceable URI
#

dspace:personreg a api:ItemEndpoint
	; rdfs:label "Sobre Persona"
	; api:uriTemplate "/contribuidor/{type}/{name}"
    ; api:variable [api:name "item"; api:type rdfs:Resource]
	; api:selector 
		[ api:where '?item rdf:type foaf:Person. filter(regex(str(?item),?name,"i"))'
		; api:sort "label"
		]
	; api:defaultViewer api:labelledDescribeViewer
	.

dspace:communityreg a api:ItemEndpoint
	; rdfs:label "Sobre Comunidad"
	; api:uriTemplate "/comunidad/{id}"
    ; api:variable [api:name "item"; api:type rdfs:Resource]
	; api:selector 
		[ api:where "?item rdf:type bibo:Collection. ?item rdfs:label ?o. FILTER(?o = ?id)"
		; api:sort "label"
		]
	; api:defaultViewer api:labelledDescribeViewer
	.

dspace:collectionreg a api:ItemEndpoint
	; rdfs:label "Sobre Coleccion"
	; api:uriTemplate "/coleccion/{id}"
    ; api:variable [api:name "item"; api:type rdfs:Resource]
	; api:selector 
		[ api:where '?item rdf:type bibo:Collection. ?item rdfs:label ?o. filter(regex(str(?item),"coleccion")). FILTER(?o = ?id)'
		; api:sort "label"
		]
	; api:defaultViewer api:labelledDescribeViewer
	.

dspace:resourcereg a api:ItemEndpoint
	; rdfs:label "Sobre Tesis"
	; api:uriTemplate "/recurso/{id}"
    ; api:variable [api:name "item"; api:type rdfs:Resource]
	; api:selector 
		[ api:where '?item rdfs:label ?o. filter(regex(str(?item),"/recurso/")). FILTER(?o = ?id)'
		; api:sort "label"
		]
	; api:defaultViewer api:labelledDescribeViewer
	.


dspace:thesisreg a api:ItemEndpoint
	; rdfs:label "Sobre Tesis"
	; api:uriTemplate "/tesis/{id}"
    ; api:variable [api:name "item"; api:type rdfs:Resource]
	; api:selector 
		[ api:where "?item rdf:type bibo:Thesis. ?item rdfs:label ?o. FILTER(?o = ?id)"
		; api:sort "label"
		]
	; api:defaultViewer api:labelledDescribeViewer
	.

dspace:documentreg a api:ItemEndpoint
	; rdfs:label "Sobre Documento"
	; api:uriTemplate "/documento/{id}"
    ; api:variable [api:name "item"; api:type rdfs:Resource]
	; api:selector 
		[ api:where "?item rdf:type bibo:Document. ?item rdfs:label ?o. FILTER(?o = ?id)"
		; api:sort "label"
		]
	; api:defaultViewer api:labelledDescribeViewer
	.

dspace:bookreg a api:ItemEndpoint
	; rdfs:label "Sobre Libro"
	; api:uriTemplate "/libro/{id}"
    ; api:variable [api:name "item"; api:type rdfs:Resource]
	; api:selector 
		[ api:where "?item rdf:type bibo:Book. ?item rdfs:label ?o. FILTER(?o = ?id)"
		; api:sort "label"
		]
	; api:defaultViewer api:labelledDescribeViewer
	.

dspace:issuereg a api:ItemEndpoint
	; rdfs:label "Sobre Revista"
	; api:uriTemplate "/revista/{id}"
    ; api:variable [api:name "item"; api:type rdfs:Resource]
	; api:selector 
		[ api:where "?item rdf:type bibo:Issue. ?item rdfs:label ?o. FILTER(?o = ?id)"
		; api:sort "label"
		]
	; api:defaultViewer api:labelledDescribeViewer
	.

dspace:performancereg a api:ItemEndpoint
	; rdfs:label "Sobre Libro"
	; api:uriTemplate "/evento/{id}"
    ; api:variable [api:name "item"; api:type rdfs:Resource]
	; api:selector 
		[ api:where "?item rdf:type bibo:Performance. ?item rdfs:label ?o. FILTER(?o = ?id)"
		; api:sort "label"
		]
	; api:defaultViewer api:labelledDescribeViewer
	.

dspace:articlereg a api:ItemEndpoint
	; rdfs:label "Sobre Libro"
	; api:uriTemplate "/articulo/{id}"
    ; api:variable [api:name "item"; api:type rdfs:Resource]
	; api:selector 
		[ api:where "?item rdf:type bibo:Article. ?item rdfs:label ?o. FILTER(?o = ?id)"
		; api:sort "label"
		]
	; api:defaultViewer api:labelledDescribeViewer
	.
#
# The /about endpoint requires a query parameter whose value
# is a URI; this is the single selected ?item. These URIs
# are typically constructed by the Velocity renderer when
# a resource is clicked on for a dataset-relative link. 
#

dspace:about a api:ItemEndpoint
	; rdfs:label "About"
	; api:uriTemplate "/about?resource={uri}"
    ; api:variable [api:name "uri"; api:type rdfs:Resource]
	; api:selector 
		[ api:where "?item ?p ?o. FILTER(?item = ?uri)"
		; api:sort "label"
		]
	; api:defaultViewer api:labelledDescribeViewer
	.


#
# class and property declarations, setting shortnames and
# property ranges.
#

foaf:Person a rdfs:Class
	; rdfs:label "Persona"
	; api:label "Persona"
	.

bibo:Collection a rdfs:Class
	; rdfs:label "Comunidad"
	; api:label "Comunidad"
	.

bibo:Thesis a rdfs:Class
	; rdfs:label "Tesis"
	; api:label "Tesis"
	.

bibo:Issue  a rdfs:Class
	; rdfs:label "Revista"
	; api:label "Revista"
	.

bibo:Document a rdfs:Class
	; rdfs:label "Documento"
	; api:label "Documento"
	.

bibo:Performance a rdfs:Class
	; rdfs:label "Evento"
	; api:label "Evento"
	.

bibo:Book a rdfs:Class
	; rdfs:label "Libro"
	; api:label "Libro"
	.

bibo:Article a rdfs:Class
	; rdfs:label "Art√≠culo"
	; api:label "Articulo"
	.

dcterms:FileFormat a rdfs:Class
	; rdfs:label "Formato"
	; api:label "Formato"
	.

dcterms:title a rdf:Property
	; api:label "titulo"
	; rdfs:range xsd:string
	.

foaf:name a rdf:Property
	; api:label "nombres"
	; rdfs:label "Nombres"
	; rdfs:range xsd:string
	.

foaf:firstName a rdf:Property
	; api:label "Nombre"
	; rdfs:label "Nombre"
	; rdfs:range xsd:string
	.

foaf:lastName a rdf:Property
	; api:label "Apellido"
	; rdfs:label "Apellido"
	; rdfs:range xsd:string
	.

rdaa:P50195 a rdf:Property
	; api:multiValued true
	; api:label "autorDe"
	; rdfs:label "AutorDe"
	; rdfs:range rdfs:Class
	.

rdaa:P50161 a rdf:Property
	; api:multiValued true
	; api:label "contribuidorDe"
	; rdfs:label "ContribuidorDe"
	; rdfs:range rdfs:Class
	.

rdfs:label a rdf:Property
	; api:label "etiqueta"
	; rdfs:label "Etiqueta"
	; rdfs:range xsd:string
	.

dcterms:description a rdf:Property
	; api:label "descripcion"
	; rdfs:label "Descripcion"
	; rdfs:range xsd:string
	.

mrel:aut a rdf:Property
	; api:label "autor"
	; rdfs:label "Autor"
	; rdfs:range rdfs:Class
	.

mrel:ths a rdf:Property
	; api:label "Director"
    ; rdfs:range rdfs:Class
	.

rdag1:academicDegree a rdf:Property
	; api:label "gradoAcademico"
	; rdfs:label "Descripcion"
	; rdfs:range xsd:string
	.

dcterms:available a rdf:Property
	; api:label "disponibleDesde"
	; rdfs:range xsd:dateTime
	.

dcterms:dateSubmitted a rdf:Property
	; api:label "fechaEnviado"
	; rdfs:range xsd:dateTime
	.

dcterms:format a rdf:Property
	; api:label "formato"
	; rdfs:range rdfs:Class
	.

dcterms:isPartOf a rdf:Property
	; api:label "esParteDe"
	; rdfs:range rdfs:Class
	.

dcterms:issued a rdf:Property
	; api:label "fechaPublicacion"
	; rdfs:range xsd:dateTime
	.

dcterms:license a rdf:Property
	; api:label "licencia"
	; rdfs:range xsd:string
	.

dcterms:provenance a rdf:Property
	; api:label "Fuente"
	; rdfs:range xsd:string
	.

dcterms:subject a rdf:Property
	; api:label "palabrasClave"
	; rdfs:range xsd:string
	.

dcterms:type a rdf:Property
	; api:label "tipo"
	; rdfs:range xsd:string
	.

bibo:abstract a rdf:Property
	; api:label "resumen"
	; rdfs:range xsd:string
	.

bibo:handle a rdf:Property
	; api:label "urlFuente"
	; rdfs:range xsd:anyURI
	.

bibo:numPages a rdf:Property
	; api:label "paginas"
	; rdfs:range xsd:string
	.

bibo:uri a rdf:Property
	; api:label "uri"
	; rdfs:range xsd:anyURI
	.

mrel:pup a rdf:Property
	; api:label "ciudadEdicion"
	; rdfs:range xsd:string
	.

mrel:ctb a rdf:Property
	; api:label "colaborador"
	; rdfs:range rdfs:Class
	.

mrel:spn a rdf:Property
	; api:label "patrocinador"
	; rdfs:range rdfs:Class
	.

mrel:oth a rdf:Property
	; api:label "contribuidor"
	; rdfs:range rdfs:Class
	.

bibo:issuer a rdf:Property
	; api:label "publicadoPor"
	; rdfs:range xsd:string
	.

bibo:issue a rdf:Property
	; api:label "edicion"
	; rdfs:range xsd:string
	.

bibo:isbn13 a rdf:Property
	; api:label "isbn13"
	; rdfs:range xsd:string
	.

bibo:issn a rdf:Property
	; api:label "issn"
	; rdfs:range xsd:string
	.
